digraph {
graph [overlap=false]
node [shape=doublecircle];
"IO::Compress::Base::Common" -> "strict";
"base" -> "IO::Socket::INET";
"LWP::UserAgent" -> "HTTP::Date";
"POSIX" -> "warnings";
"URI::_generic" -> "Exporter";
"SelectSaver" -> "Symbol";
"HTTP::Config" -> "HTTP::Request";
"IO::Socket::SSL" -> "Exporter";
"IO::Socket::UNIX" -> "strict";
"IO::Compress::Base::Common" -> "utf8";
"IO::Uncompress::Gunzip" -> "warnings";
"LWP::Protocol::http" -> "Net::HTTP::Methods";
"IO::Socket::SSL::PublicSuffix" -> "URI::_idna";
"IO::Socket::SSL" -> "vars";
"Net::HTTP::Methods" -> "UNIVERSAL";
"URI::_server" -> "warnings";
"LWP::Protocol::http" -> "IO::Socket::SSL";
"IO::Uncompress::Gunzip" -> "strict";
"HTTP::Request::Common" -> "Exporter";
"parent" -> "URI::http";
"List::Util" -> "strict";
"base" -> "utf8";
"LWP::Protocol::http" -> "Errno";
"HTTP::Config" -> "warnings";
"URI" -> "URI::_server";
"LWP::Protocol" -> "HTTP::Message";
"Net::HTTP::Methods" -> "vars";
"IO::Socket::SSL::SSL_Context" -> "UNIVERSAL";
"IO::Socket::SSL" -> "Scalar::Util";
"HTTP::Response" -> "HTTP::Message";
"IO::Socket" -> "IO::Socket";
"IO::Uncompress::RawInflate" -> "strict";
"Compress::Raw::Zlib" -> "strict";
"URI::_generic" -> "warnings";
"HTML::HeadParser" -> "HTTP::Headers";
"LWP::Protocol::http" -> "HTTP::Request";
"Exporter::Heavy" -> "Exporter::Heavy";
"IO::Socket::IP" -> "IO::Socket::IP";
"IO::Socket::SSL::PublicSuffix" -> "Exporter";
"IO::Socket::IP" -> "POSIX";
"IO::Socket::INET" -> "Exporter";
"LWP::Protocol::https" -> "IO::Socket::SSL";
"warnings::register" -> "warnings";
"HTTP::Config" -> "strict";
"LWP::Protocol" -> "LWP::UserAgent";
"Net::HTTP::Methods" -> "utf8";
"IO::Socket::SSL::SSL_Context" -> "strict";
"LWP::Protocol" -> "Net::SSLeay";
"Net::HTTPS" -> "IO::Socket::SSL";
"IO::Socket::SSL" -> "IO::Socket::SSL::PublicSuffix";
"IO::File" -> "Exporter";
"URI::http" -> "strict";
"Exporter" -> "Exporter::Heavy";
"U64" -> "constant";
"LWP::Protocol::https" -> "LWP::Protocol::http";
"IO::Socket::INET" -> "IO::Socket";
"IO::Socket::SSL::SSL_Context" -> "Exporter";
"IO::Socket::SSL" -> "Net::SSLeay";
"Net::SSLeay" -> "bytes";
"Net::HTTP::Methods" -> "URI::_server";
"IO::Uncompress::Base" -> "Exporter";
"LWP::Protocol::http" -> "URI::_generic";
"URI::_punycode" -> "warnings";
"HTTP::Config" -> "HTTP::Config";
"URI::_server" -> "strict";
"URI::_idna" -> "strict";
"IO::Socket" -> "XSLoader";
"LWP::Protocol" -> "Net::HTTP::Methods";
"URI::_server" -> "URI::_server";
"LWP::Protocol::http::Socket" -> "vars";
"URI::_query" -> "warnings";
"Net::HTTP::Methods" -> "Net::HTTP::Methods";
"IO::Uncompress::RawInflate" -> "IO::Compress::Base::Common";
"URI::_idna" -> "Exporter";
"File::GlobMapper" -> "strict";
"IO::Socket" -> "IO::Handle";
"IO::Handle" -> "strict";
"base" -> "IO::Socket::UNIX";
"LWP::UserAgent" -> "HTTP::Request::Common";
"POSIX" -> "Exporter";
"LWP::UserAgent" -> "LWP::UserAgent";
"URI::_server" -> "URI::http";
"IO::Compress::Gzip::Constants" -> "bytes";
"IO::Socket::SSL::SSL_Context" -> "IO::Socket::SSL::SSL_Context";
"IO::Socket::SSL" -> "IO::Socket";
"IO::Socket::INET" -> "strict";
"constant" -> "constant";
"Net::HTTP::Methods" -> "IO::Uncompress::Gunzip";
"parent" -> "URI::_query";
"IO::Socket::SSL" -> "IO::Socket::IP";
"LWP::Protocol::http" -> "URI::_server";
"Net::HTTP::Methods" -> "Exporter";
"IO::Socket::IP" -> "constant";
"parent" -> "vars";
"IO::Compress::Gzip::Constants" -> "strict";
"HTML::Parser" -> "strict";
"IO::Socket::SSL::SSL_HANDLE" -> "strict";
"Compress::Raw::Zlib" -> "warnings";
"HTML::Entities" -> "strict";
"IO::Uncompress::RawInflate" -> "Compress::Raw::Zlib";
"LWP::Protocol" -> "IO::Socket::SSL";
"LWP::Protocol::http" -> "IO::Socket::IP";
"IO::Socket::IP::_ForINET" -> "base";
"HTTP::Request::Common" -> "warnings";
"LWP::UserAgent" -> "HTML::HeadParser";
"IO::Seekable" -> "strict";
"Net::HTTP::Methods" -> "Exporter::Heavy";
"IO::Uncompress::Gunzip" -> "IO::Compress::Gzip::Constants";
"HTTP::Message" -> "utf8";
"IO::Seekable" -> "Exporter";
"IO::Socket::SSL::SSL_Context" -> "constant";
"IO::Compress::Zlib::Extra" -> "warnings";
"LWP::Protocol::http" -> "HTTP::Headers";
"LWP::Protocol::http" -> "LWP::Protocol";
"URI::https" -> "parent";
"IO" -> "warnings";
"IO::Socket::IP::_ForINET6" -> "base";
"LWP::UserAgent" -> "HTTP::Request";
"IO::Uncompress::RawInflate" -> "UNIVERSAL";
"IO" -> "strict";
"HTML::HeadParser" -> "HTML::HeadParser";
"IO::Socket" -> "Socket";
"LWP::UserAgent" -> "UNIVERSAL";
"File::GlobMapper" -> "warnings";
"IO::Uncompress::Base" -> "UNIVERSAL";
"HTTP::Config" -> "UNIVERSAL";
"IO::Handle" -> "Exporter";
"U64" -> "warnings";
"LWP::UserAgent" -> "HTML::Parser";
"URI::_generic" -> "URI::_generic";
"IO::Compress::Gzip::Constants" -> "constant";
"HTTP::Request" -> "HTTP::Message";
"IO::Compress::Zlib::Extra" -> "bytes";
"IO::Uncompress::Gunzip" -> "IO::Compress::Zlib::Extra";
"URI::_generic" -> "parent";
"IO::Uncompress::Gunzip" -> "UNIVERSAL";
"HTML::Parser" -> "HTML::HeadParser";
"IO::Socket::UNIX" -> "IO::Socket";
"LWP::UserAgent" -> "HTTP::Response";
"HTTP::Message" -> "HTTP::Headers";
"SelectSaver" -> "SelectSaver";
"URI" -> "URI";
"warnings" -> "warnings";
"URI::http" -> "URI::_server";
"Net::HTTP::Methods" -> "Net::HTTPS";
"constant" -> "Internals";
"HTTP::Message" -> "HTTP::Message";
"IO::Uncompress::RawInflate" -> "Exporter";
"IO::Socket::SSL" -> "List::Util";
"IO::Socket::SSL" -> "warnings";
"URI::http" -> "parent";
"main" -> "main";
"strict" -> "strict";
"parent" -> "URI::_server";
"LWP::Protocol" -> "LWP::Protocol::http";
"Tie::Hash" -> "Exporter";
"LWP::Protocol" -> "UNIVERSAL";
"Net::HTTPS" -> "vars";
"Exporter" -> "Exporter";
"base" -> "IO::Socket";
"HTML::HeadParser" -> "vars";
"LWP::Protocol" -> "LWP::Protocol::https";
"IO::Socket" -> "Net::HTTPS";
"AutoLoader" -> "strict";
"SelectSaver" -> "Exporter";
"IO::Socket" -> "Exporter";
"IO::Socket::IP" -> "strict";
"URI::_punycode" -> "Exporter";
"Scalar::Util" -> "strict";
"Net::HTTP::Methods" -> "IO::Socket::SSL";
"HTTP::Config" -> "HTTP::Response";
"HTML::HeadParser" -> "XSLoader";
"parent" -> "strict";
"IO::Socket::SSL" -> "IO::Handle";
"Net::HTTPS" -> "strict";
"LWP::Protocol::http" -> "LWP::Protocol::https";
"HTML::Parser" -> "vars";
"URI::_idna" -> "URI::_punycode";
"LWP::Protocol" -> "Net::HTTPS";
"Net::HTTPS" -> "UNIVERSAL";
"IO::Uncompress::Gunzip" -> "main";
"LWP::UserAgent" -> "HTTP::Config";
"Net::SSLeay" -> "IO::Socket::SSL::SSL_Context";
"Net::SSLeay" -> "strict";
"IO::Uncompress::Gunzip" -> "bytes";
"IO::Socket::IP" -> "XSLoader";
"LWP::Protocol::https" -> "strict";
"File::Glob" -> "Exporter";
"POSIX" -> "POSIX";
"File::Glob" -> "warnings";
"IO::Uncompress::RawInflate" -> "XSLoader";
"IO::Socket" -> "UNIVERSAL";
"LWP::Protocol::http" -> "strict";
"IO" -> "Exporter";
"HTTP::Request::Common" -> "strict";
"Net::SSLeay" -> "AutoLoader";
"IO::Socket::SSL::SSL_Context" -> "IO::Socket::SSL";
"IO::Socket::IP" -> "IO::Socket::SSL";
"URI" -> "URI::https";
"URI::_punycode" -> "integer";
"URI::_punycode" -> "strict";
"LWP::Protocol" -> "Net::HTTP";
"LWP::Protocol::https" -> "HTTP::Message";
"LWP::UserAgent" -> "HTTP::Headers";
"IO::Uncompress::Adapter::Inflate" -> "warnings";
"LWP::Protocol::http" -> "Storable";
"HTTP::Config" -> "HTTP::Message";
"IO::Handle" -> "XSLoader";
"IO::Socket::SSL::Session_Cache" -> "strict";
"URI::https" -> "warnings";
"base" -> "base";
"IO::Uncompress::Gunzip" -> "Exporter::Heavy";
"IO::Socket::SSL" -> "IO::Socket::SSL::SSL_HANDLE";
"Socket" -> "warnings::register";
"LWP::Protocol::http" -> "vars";
"URI::https" -> "strict";
"URI" -> "utf8";
"IO::Uncompress::Adapter::Inflate" -> "strict";
"IO::Socket::IP" -> "base";
"POSIX" -> "strict";
"HTML::HeadParser" -> "HTML::Entities";
"IO::Handle" -> "SelectSaver";
"IO::Uncompress::Gunzip" -> "IO::Uncompress::RawInflate";
"File::GlobMapper" -> "Exporter";
"IO::Socket" -> "Exporter::Heavy";
"Net::HTTP::Methods" -> "IO::Socket::SSL::SSL_HANDLE";
"LWP::Protocol::http" -> "HTTP::Message";
"URI::_query" -> "strict";
"IO::Compress::Base::Common" -> "Exporter";
"IO::Socket::SSL::SSL_HANDLE" -> "IO::Socket::SSL";
"LWP::Protocol::http" -> "LWP::Protocol::http::SocketMethods";
"IO::Socket::SSL" -> "AutoLoader";
"HTML::HeadParser" -> "strict";
"LWP::Protocol" -> "main";
"Net::SSLeay" -> "Exporter";
"IO::Handle" -> "IO";
"Net::HTTP::Methods" -> "strict";
"HTML::Entities" -> "vars";
"HTML::HeadParser" -> "HTML::Parser";
"URI::_punycode" -> "constant";
"IO::File" -> "IO::Seekable";
"Compress::Raw::Zlib" -> "constant";
"URI::http" -> "warnings";
"Net::HTTPS" -> "Net::HTTP::Methods";
"IO::Uncompress::Adapter::Inflate" -> "UNIVERSAL";
"URI::_generic" -> "strict";
"HTTP::Request" -> "URI::http";
"base" -> "UNIVERSAL";
"LWP::Protocol" -> "IO::Socket::IP::_ForINET6";
"URI::Escape" -> "URI::Escape";
"LWP::Protocol" -> "IO::Socket::IP";
"LWP::Protocol" -> "IO::Socket::SSL::SSL_Context";
"IO::File" -> "strict";
"HTML::Parser" -> "HTML::Parser";
"IO::Socket::SSL" -> "IO::Socket::SSL::SSL_Context";
"IO::Uncompress::RawInflate" -> "U64";
"HTTP::Request::Common" -> "HTTP::Request::Common";
"IO::Compress::Base::Common" -> "warnings";
"IO::Socket::IP" -> "Tie::Hash";
"IO::Compress::Zlib::Extra" -> "Exporter";
"AutoLoader" -> "AutoLoader";
"IO::Compress::Zlib::Extra" -> "UNIVERSAL";
"main" -> "LWP::UserAgent";
"IO::Socket::SSL" -> "Socket";
"Tie::Hash" -> "warnings::register";
"vars" -> "vars";
"IO::Handle" -> "Symbol";
"HTTP::Request" -> "HTTP::Request";
"URI::_server" -> "parent";
"HTTP::Request::Common" -> "UNIVERSAL";
"LWP::Protocol" -> "IO::Socket::SSL::SSL_HANDLE";
"IO::Uncompress::Gunzip" -> "Exporter";
"LWP::Protocol" -> "IO::Socket::SSL::Session_Cache";
"Net::HTTP" -> "vars";
"LWP::Protocol" -> "IO::Socket::IP::_ForINET";
"IO::Socket" -> "strict";
"Net::HTTP" -> "strict";
"IO::Socket::IP" -> "warnings";
"URI::_server" -> "URI";
"URI::_server" -> "URI::Escape";
"LWP::UserAgent" -> "URI";
"HTTP::Headers" -> "HTTP::Headers";
"IO::Socket::SSL::PublicSuffix" -> "constant";
"HTML::HeadParser" -> "utf8";
"File::GlobMapper" -> "XSLoader";
"IO::Socket::SSL" -> "UNIVERSAL";
"LWP::UserAgent" -> "LWP::Protocol";
"LWP::Protocol::http" -> "HTTP::Response";
"IO::Uncompress::RawInflate" -> "IO::Uncompress::Adapter::Inflate";
"IO::Compress::Base::Common" -> "File::GlobMapper";
"URI::_server" -> "Exporter";
"IO::Uncompress::Base" -> "constant";
"IO::Socket::IP" -> "Socket";
"IO::Socket::IP" -> "IO::Socket";
"Compress::Raw::Zlib" -> "Compress::Raw::Zlib";
"LWP::UserAgent" -> "HTTP::Message";
"Net::SSLeay" -> "Net::SSLeay";
"File::Glob" -> "strict";
"HTTP::Headers" -> "LWP::Protocol::http";
"IO::Compress::Base::Common" -> "constant";
"parent" -> "parent";
"parent" -> "URI::_generic";
"URI::_server" -> "URI::https";
"IO::Socket::SSL::SSL_HANDLE" -> "Exporter";
"IO::Socket::IP" -> "UNIVERSAL";
"IO::Uncompress::Base" -> "warnings";
"HTTP::Response" -> "HTTP::Response";
"IO::Compress::Gzip::Constants" -> "warnings";
"Errno" -> "strict";
"IO::Socket::SSL" -> "constant";
"IO::Socket::SSL" -> "XSLoader";
"HTTP::Request" -> "URI";
"LWP::UserAgent" -> "HTTP::Status";
"IO::Uncompress::Base" -> "strict";
"Socket" -> "strict";
"base" -> "main";
"Compress::Raw::Zlib" -> "Exporter";
"IO::Socket::SSL" -> "IO::Socket::SSL";
"IO::Socket::SSL" -> "strict";
"IO::Socket::IP" -> "Exporter";
"URI::_generic" -> "utf8";
"URI::http" -> "URI::_generic";
"LWP::UserAgent" -> "LWP::Protocol::http";
"IO::Socket::IP" -> "Tie::StdHash";
"IO::Socket::UNIX" -> "Exporter";
"IO::Uncompress::Base" -> "IO::File";
"Compress::Raw::Zlib" -> "bytes";
"URI::_query" -> "Exporter";
"URI::_idna" -> "warnings";
"Net::HTTP::Methods" -> "URI";
"URI::_server" -> "URI::_generic";
"IO::Compress::Zlib::Extra" -> "strict";
"LWP::Protocol" -> "LWP::Protocol::http::Socket";
"Net::SSLeay" -> "vars";
"HTTP::Request::Common" -> "HTTP::Request";
"LWP::Protocol::http" -> "LWP::Protocol::http";
"IO::Socket::SSL::SSL_Context" -> "Net::SSLeay";
"Socket" -> "Exporter";
"IO::Uncompress::RawInflate" -> "IO::Uncompress::Base";
"IO::Uncompress::Adapter::Inflate" -> "Exporter";
"IO::Uncompress::RawInflate" -> "warnings";
"LWP::UserAgent" -> "LWP::MemberMixin";
"IO::Compress::Base::Common" -> "bytes";
"constant" -> "mro";
"LWP::Protocol" -> "LWP::Protocol";
"File::GlobMapper" -> "File::Glob";
"IO::Socket::SSL::SSL_HANDLE" -> "Scalar::Util";
}
